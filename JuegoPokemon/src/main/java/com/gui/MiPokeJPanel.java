/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.gui;

/**
 *
 * @author michael
 */
public class MiPokeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MiPokeJPanel
     */
    public MiPokeJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        miPokejTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 153, 102));
        setForeground(new java.awt.Color(255, 153, 102));
        setPreferredSize(new java.awt.Dimension(880, 571));
        setLayout(new java.awt.BorderLayout());

        miPokejTable.setBackground(new java.awt.Color(115, 229, 151));
        miPokejTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        miPokejTable.setFont(new java.awt.Font("Meslo LG L DZ for Powerline", 0, 8)); // NOI18N
        miPokejTable.setForeground(new java.awt.Color(101, 226, 60));
        miPokejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Imagen", "Nombre", "Nivel", "Peticiones de Comida", "Peticiones de limpieza", "Peticiones de paseo", "Enfermedades"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        miPokejTable.setGridColor(new java.awt.Color(153, 153, 153));
        miPokejTable.setRowHeight(100);
        miPokejTable.setSelectionBackground(new java.awt.Color(13, 123, 107));
        miPokejTable.setSelectionForeground(new java.awt.Color(93, 173, 108));
        jScrollPane1.setViewportView(miPokejTable);
        if (miPokejTable.getColumnModel().getColumnCount() > 0) {
            miPokejTable.getColumnModel().getColumn(0).setMinWidth(30);
            miPokejTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            miPokejTable.getColumnModel().getColumn(0).setMaxWidth(30);
            miPokejTable.getColumnModel().getColumn(1).setMinWidth(100);
            miPokejTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            miPokejTable.getColumnModel().getColumn(1).setMaxWidth(100);
            miPokejTable.getColumnModel().getColumn(2).setMinWidth(75);
            miPokejTable.getColumnModel().getColumn(2).setPreferredWidth(75);
            miPokejTable.getColumnModel().getColumn(2).setMaxWidth(75);
            miPokejTable.getColumnModel().getColumn(3).setMinWidth(50);
            miPokejTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            miPokejTable.getColumnModel().getColumn(3).setMaxWidth(50);
            miPokejTable.getColumnModel().getColumn(4).setMinWidth(150);
            miPokejTable.getColumnModel().getColumn(4).setPreferredWidth(150);
            miPokejTable.getColumnModel().getColumn(4).setMaxWidth(150);
            miPokejTable.getColumnModel().getColumn(5).setMinWidth(160);
            miPokejTable.getColumnModel().getColumn(5).setPreferredWidth(160);
            miPokejTable.getColumnModel().getColumn(5).setMaxWidth(160);
            miPokejTable.getColumnModel().getColumn(6).setMinWidth(150);
            miPokejTable.getColumnModel().getColumn(6).setPreferredWidth(150);
            miPokejTable.getColumnModel().getColumn(6).setMaxWidth(150);
            miPokejTable.getColumnModel().getColumn(7).setMinWidth(150);
            miPokejTable.getColumnModel().getColumn(7).setPreferredWidth(150);
            miPokejTable.getColumnModel().getColumn(7).setMaxWidth(150);
        }

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable miPokejTable;
    // End of variables declaration//GEN-END:variables
}
